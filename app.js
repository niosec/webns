// Definición de todas las unidades y matrices de conversión
const unitsData = {
            unitTypes: [
                "Energía", "Frecuencia", "Longitud", "Masa", "Fuerza", "Presión", 
                "Aceleración", "Densidad", "Tiempo", "Velocidad", "Volumen", 
                "Ángulo plano", "Área"
            ],
            
            nomen: {
                nomen_energ: [
                    "Julio (J)", "Kilojoule (kJ)", "Gran calorie", "Kilocaloría (kcal)", 
                    "Vatio-hora (W*h)", "Kilovatio-hora (kW*h)", "Electronvoltio (eV)", 
                    "BTU", "US therm", "Pie-libra fuerza (ft*lbs)"
                ],
                nomen_frec: [
                    "Hercio", "Kilohertz", "Megahercio", "Gigahercio"
                ],
                nomen_long: [
                    "Kilómetro (km)", "Metro (m)", "Centímetro (cm)", "Milímetro (mm)", 
                    "Micrómetro (µm)", "Nanómetro (nm)", "Milla (mi)", "Yarda (yd)", 
                    "Pie (ft)", "Pulgada (in)", "Milla náutica (nmi)"
                ],
                nomen_masa: [
                    "Tonelada (tn)", "Kilogramo (kg)", "Gramo (gr)", "Miligramo (mg)", 
                    "Microgramo (mcg)", "Tonelada larga", "Tonelada corta", "Stone", 
                    "Libra (lb)", "Onza (oz)"
                ],
                nomen_fuerz: [
                    "meganewton (MN)", "kilonewton (kN)", "decanewton (dN)", "newton (N)", 
                    "milinewton (mN)", "micronewton (µN)", "kip-fuerza (kipf)", 
                    "tonelada-fuerza (tnf)", "libra-fuerza (lbf)", "onza-fuerza (ozf)", 
                    "kilogramo-fuerza (kgf)", "dina (dyn)", "poundal (pdl)"
                ],
                nomen_pres: [
                    "bar", "(kPa) kilopascal", "(hPa) hectopascal", "(MPa) megapascal", 
                    "milibar", "(Pa) pascal", "(gf/cm²) gramo/centímetro cuadrado", 
                    "(kgf/cm²) kilogramo/centímetro cuadrado", "(tn/cm²) tonelada/centímetro cuadrado", 
                    "(kgf/m²) kilogramo/metro cuadrado", "(tn/m²) tonelada/centímetro cuadrado", 
                    "(N/m²) newton/metro cuadrado", "(kN/m²) kilonewton/metro cuadrado", 
                    "(MN/m²) meganewton por metro cuadrado", "(N/cm²) newton por centímetro cuadrado", 
                    "(N/mm²) newton por milimetro cuadrado", "(osi, oz/in²) onza por pulgada cuadrada", 
                    "(psi) libras por pulgada cuadrada ", "(ksi) 1000 libras por pulgada cuadrada ", 
                    "pulgadas de mercurio", "centímetros de mercurio", "milímetro de mercurio (torr)", 
                    "metro de agua", "centímetro de agua", "pulgada de agua", "atmósfera física (atm)"
                ],
                nomen_acel: [
                    "(km/s²) kilometros por segundo cuadrado ", "(m/s²) metros por segundo cuadrado ", 
                    "(mm/s²) milímetro por segundo cuadrado ", "milla por segundo cuadrado", 
                    "(ft/s²) pie por segundo cuadrado ", "(in/s²) pulgada por segundo cuadrado ", 
                    "(gn) aceleración de la gravedad ", "(Gal) Galileo "
                ],
                nomen_temp: [
                    "grado Celsius (°C)", "grado Fahrenheit (°F)", "Kelvin (K)", "grado Réaumur (°Re)", 
                    "Temperatura de Planck (Θ)", "grado Rankine (°R)", "grado Newton (°N)", 
                    "grado Romer (°Rø)", "grado Delisle (°D)"
                ],
                nomen_tiempo: [
                    "Nanosegundo", "Microsegundo", "Milisegundo", "Segundo", "Minuto", "Hora", 
                    "Dia", "Semana", "Mes", "Año natural", "Década", "Siglo"
                ],
                nomen_vel: [
                    "kilómetros por segundo (km/s)", "metros por segundo (m/s)", 
                    "kilómetros por hora (km/h)", "metros por minuto (m/min)", 
                    "milla por segundo (M/seg)", "milla por hora (mph)", 
                    "pie por segundo (ft/s)", "pie por minuto (ft/min)", "nudo"
                ],
                nomen_vol: [
                    "kilometro cúbico (km³)", "metro cúbico (m³)", "decimetro cúbico (dm³)", 
                    "centímetro cúbico (cc)", "milímetro cúbico (mm³)", "hectolitro (hl)", 
                    "decalitro", "litro (l)", "decilitro (dl)", "centilitro (cl)", 
                    "mililitro (ml)", "microlitro (µl)", "milla cúbica (mi³)", 
                    "mil pie cúbico (mcf)", "yarda cúbica (yd³)", "centum pie cúbico (ccf)", 
                    "pie cúbico (ft³)", "pulgada cúbica (in³)"
                ],
                nomen_ang: [
                    "circunferencia (circle)", "sextante", "radián (rad)", "grado (deg)", 
                    "gradián (grad)", "minuto (')", "segundo ('')", "rumbo"
                ],
                nomen_are: [
                    "kilómetro cuadrado (km²)", "hectárea", "área (a)", "metro cuadrado (m²)", 
                    "decímetro cuadrado (dm²)", "centímetro cuadrado (cm²)", 
                    "milímetro cuadrado (mm²)", "barn (b)", "milla cuadrada", "acre", 
                    "yarda cuadrada (yd²)", "pie cuadrado (ft²)", "pulgada cuadrada (in²)"
                ],
                nomen_den: [
                    "(t/m³) toneladas por metro cúbico ", "(kg/m³) kilogramo por metro cúbico ", 
                    "(g/m³) gramo por metro cúbico ", "(mg/m³) miligramo por metro cúbico ", 
                    "(kg/L) kilogramo por litro ", "(g/L) gramo por litro ", 
                    "(mg/L) miligramo por litro ", "(kg/dm³) kilogramo por decimetro cúbico ", 
                    "(g/dm³) gramo por decimetro cúbico ", "(mg/dm³) miligramo por decimetro cúbico ", 
                    "(kg/cm³) kilogramo por centímetro cúbico ", "(g/cm³) gramo por centímetro cúbico ", 
                    "(mg/cm³) miligramo por centímetro cúbico ", "(kg/mL) kilogramo por mililitro ", 
                    "(g/mL) gramo por mililitro ", "(mg/mL) miligramo por mililitro ", 
                    "(lb/yd³) libras por yarda cúbica ", "(lb/ft³) libras por pie cúbico ", 
                    "(lb/in³) libras por pulgada cúbica "
                ]
            },
            
            conv: {
                conv_energ: [
                    [1, 0.001, 0.239006, 0.000239006, 0.00027777808444444, 2.777780844444400151e-7, 6241516233886395392, 0.0009478181667034029376, 9.480444746132779938e-9, 0.73756296354586647901],
                    [1000, 1, 239.006, 0.239006, 0.277778, 0.000277778, 6.242e21, 0.947817, 9.4804e-6, 737.562],
                    [4.184, 0.004184, 1, 0.001, 0.00116222, 1.1622e-6, 2.611e19, 0.00396567, 3.9666e-8, 3.08596],
                    [4184, 4.184, 1000, 1, 1.16222, 0.00116222, 2.611e22, 3.96567, 3.9666e-5, 3085.96],
                    [3600, 3.6, 860.421, 0.860421, 1, 0.001, 2.247e22, 3.41214, 3.413e-5, 2655.22],
                    [3.6e6, 3600, 860421, 860.421, 1000, 1, 2.247e25, 3412.14, 0.0341296, 2.655e6],
                    [1.6022e-19, 1.6022e-22, 3.8293e-20, 3.8293e-23, 4.4505e-23, 4.4505e-26, 1, 1.5186e-22, 1.5189e-27, 1.1817e-19],
                    [1055.06, 1.05506, 252.164, 0.252164, 0.293071, 0.000293071, 6.585e21, 1, 1.0002e-5, 778.169],
                    [1.055e8, 105480, 2.521e7, 25210.4, 29300.1, 29.3001, 6.584e26, 99976.1, 1, 7.78e7],
                    [1.35582, 0.00135582, 0.324048, 0.000324048, 0.000376616, 3.7662e-7, 8.462e18, 0.00128507, 1.2854e-8, 1]
                ],
                conv_frec: [
                    [1, 0.001, 1e-6, 1e-9],
                    [1000, 1, 0.001, 1e-6],
                    [1e6, 1000, 1, 0.001],
                    [1e9, 1e6, 1000, 1]
                ],
                conv_long: [
                    [1, 1000, 100000, 1e6, 1e9, 1e12, 0.621371, 1093.61, 3280.84, 39370.1, 0.539957],
                    [0.001, 1, 100, 1000, 1e6, 1e9, 0.000621371, 1.09361, 3.28084, 39.3701, 0.000539957],
                    [1e-5, 0.01, 1, 10, 10000, 1e7, 6.2137e-6, 0.0109361, 0.0328084, 0.393701, 5.3996e-6],
                    [1e-6, 0.001, 0.1, 1, 1000, 1e6, 6.2137e-7, 0.00109361, 0.00328084, 0.0393701, 5.3996e-7],
                    [1e-9, 1e-6, 1e-4, 0.001, 1, 1000, 6.2137e-10, 1.0936e-6, 3.2808e-6, 3.937e-5, 5.3996e-10],
                    [1e-12, 1e-9, 1e-7, 1e-6, 0.001, 1, 6.2137e-13, 1.0936e-9, 3.2808e-9, 3.937e-8, 5.3996e-13],
                    [1.60934, 1609.34, 160934, 1.609e6, 1.609e9, 1.609e12, 1, 1760, 5280, 63360, 0.868976],
                    [0.0009144, 0.9144, 91.44, 914.4, 914400, 9.144e8, 0.000568182, 1, 3, 36, 0.000493737],
                    [0.0003048, 0.3048, 30.48, 304.8, 304800, 3.048e8, 0.000189394, 0.333333, 1, 12, 0.000164579],
                    [2.54e-5, 0.0254, 2.54, 25.4, 25400, 2.54e7, 1.5783e-5, 0.0277778, 0.0833333, 1, 1.3715e-5],
                    [1.852, 1852, 185200, 1.852e6, 1.852e9, 1.852e12, 1.15078, 2025.37, 6076.12, 72913.4, 1]
                ],
                conv_masa: [
                    [1, 1000, 1e6, 1e9, 1e12, 0.984207, 1.10231, 157.473, 2204.62, 35274],
                    [0.001, 1, 1000, 1e6, 1e9, 0.000984207, 0.00110231, 0.157473, 2.20462, 35.274],
                    [1e-6, 0.001, 1, 1000, 1e6, 9.8421e-7, 1.1023e-6, 0.000157473, 0.00220462, 0.035274],
                    [1e-9, 1e-6, 0.001, 1, 1000, 9.8421e-10, 1.1023e-9, 1.5747e-7, 2.2046e-6, 3.5274e-5],
                    [1e-12, 1e-9, 1e-6, 0.001, 1, 9.8421e-13, 1.1023e-12, 1.5747e-10, 2.2046e-9, 3.5274e-8],
                    [1.01605, 1016.05, 1.016e6, 1.016e9, 1.016e12, 1, 1.12, 160, 2240, 35840],
                    [0.907185, 907.185, 907185, 9.072e8, 9.072e11, 0.892857, 1, 142.857, 2000, 32000],
                    [0.00635029, 6.35029, 6350.29, 6.35e6, 6.35e9, 0.00625, 0.007, 1, 14, 224],
                    [0.000453592, 0.453592, 453.592, 453592, 4.536e8, 0.000446429, 0.0005, 0.0714286, 1, 16],
                    [2.835e-5, 0.0283495, 28.3495, 28349.5, 2.835e7, 2.7902e-5, 3.125e-5, 0.00446429, 0.0625, 1]
                ],
                conv_fuerz: [
                    [1, 1000, 100000, 1000000, 1000000000, 1000000000000, 224.8, 112.4, 224800, 3597000, 102000, 100000000000, 7233000],
                    [0.001, 1, 100, 1000, 1000000, 1000000000, 0.2248, 0.1124, 224.8, 3597, 102, 100000000, 7233],
                    [0.00001, 0.01, 1, 10, 10000, 10000000, 0.002248, 0.001124, 2.248, 35.97, 1.02, 1000000, 72.33],
                    [0.000001, 0.001, 0.1, 1, 1000, 1000000, 0.0002248, 0.0001124, 0.2248, 3.597, 0.102, 100000, 7.233],
                    [0.000000001, 0.000001, 0.0001, 0.001, 1, 1000, 0.0000002248, 0.0000001124, 0.0002248, 0.003597, 0.000102, 100, 0.007233],
                    [0.000000000001, 0.000000001, 0.0000001, 0.000001, 0.001, 1, 0.0000000002248, 0.0000000001124, 0.0000002248, 0.000003597, 0.000000102, 0.1, 0.000007233],
                    [0.004448, 4.448, 444.8, 4448, 4448000, 4448000000, 1, 0.5, 1000, 16000, 453.6, 444800000, 32170],
                    [0.008896, 8.896, 889.6, 8896, 8896000, 8896000000, 2, 1, 2000, 32000, 907.2, 889600000, 64350],
                    [0.000004448, 0.004448, 0.4448, 4.448, 4448, 4448000, 0.001, 0.0005, 1, 16, 0.4536, 444800, 32.17],
                    [0.000000278, 0.000278, 0.0278, 0.278, 278, 278000, 0.0000625, 0.00003125, 0.0625, 1, 0.02835, 27800, 2.011],
                    [0.000009807, 0.009807, 0.9807, 9.807, 9807, 9807000, 0.002205, 0.001102, 2.205, 35.27, 1, 980700, 70.93],
                    [0.00000000001, 0.00000001, 0.000001, 0.00001, 0.01, 10, 0.000000002248, 0.000000001124, 0.000002248, 0.00003597, 0.00000102, 1, 0.00007233],
                    [0.0000001383, 0.0001383, 0.01383, 0.1383, 138.3, 138300, 0.00003108, 0.00001554, 0.03108, 0.4973, 0.0141, 13830, 1]
                ],
                conv_pres: [
                    [1, 100, 1000, 0.1, 1000, 100000, 1020, 1.02, 0.00102, 10200, 10.2, 100000, 100, 0.1, 10, 0.1, 232.1, 14.5, 0.0145, 29.53, 75.01, 750.1, 10.2, 1020, 401.5, 0.9869],
                    [0.01, 1, 10, 0.001, 10, 1000, 10.2, 0.0102, 0.0000102, 102, 0.102, 1000, 1, 0.001, 0.1, 0.001, 2.321, 0.145, 0.000145, 0.2953, 0.7501, 7.501, 0.102, 10.2, 4.015, 0.009869],
                    [0.001, 0.1, 1, 0.0001, 1, 100, 1.02, 0.00102, 0.00000102, 10.2, 0.0102, 100, 0.1, 0.0001, 0.01, 0.0001, 0.2321, 0.0145, 0.0000145, 0.02953, 0.07501, 0.7501, 0.0102, 1.02, 0.4015, 0.0009869],
                    [10, 1000, 10000, 1, 10000, 1000000, 10200, 10.2, 0.0102, 102000, 102, 1000000, 1000, 1, 100, 1, 2321, 145, 0.145, 295.3, 750.1, 7501, 102, 10200, 4015, 9.869],
                    [0.001, 0.1, 1, 0.0001, 1, 100, 1.02, 0.00102, 0.00000102, 10.2, 0.0102, 100, 0.1, 0.0001, 0.01, 0.0001, 0.2321, 0.0145, 0.0000145, 0.02953, 0.07501, 0.7501, 0.0102, 1.02, 0.4015, 0.0009869],
                    [0.00001, 0.001, 0.01, 0.000001, 0.01, 1, 0.0102, 0.0000102, 0.0000000102, 0.102, 0.000102, 1, 0.001, 0.000001, 0.0001, 0.000001, 0.002321, 0.000145, 0.000000145, 0.0002953, 0.0007501, 0.007501, 0.000102, 0.0102, 0.004015, 0.000009869],
                    [0.0009807, 0.09807, 0.9807, 0.00009807, 0.9807, 98.07, 1, 0.001, 0.000001, 10, 0.01, 98.07, 0.09807, 0.00009807, 0.009807, 0.00009807, 0.2276, 0.01422, 0.00001422, 0.02896, 0.07356, 0.7356, 0.01, 1, 0.3937, 0.0009678],
                    [0.9807, 98.07, 980.7, 0.09807, 980.7, 98070, 1000, 1, 0.001, 10000, 10, 98070, 98.07, 0.09807, 9.807, 0.09807, 227.6, 14.22, 0.01422, 28.96, 73.56, 735.6, 10, 1000, 393.7, 0.9678],
                    [980.7, 98070, 980700, 98.07, 980700, 98070000, 1000000, 1000, 1, 10000000, 10000, 98070000, 98070, 98.07, 9807, 98.07, 227600, 14220, 14.22, 28960, 73560, 735600, 10000, 1000000, 393700, 967.8],
                    [0.00009807, 0.009807, 0.09807, 0.000009807, 0.09807, 9.807, 0.1, 0.0001, 0.0000001, 1, 0.001, 9.807, 0.009807, 0.000009807, 0.0009807, 0.000009807, 0.02276, 0.001422, 0.000001422, 0.002896, 0.007356, 0.07356, 0.001, 0.1, 0.03937, 0.00009678],
                    [0.09807, 9.807, 98.07, 0.009807, 98.07, 9807, 100, 0.1, 0.0001, 1000, 1, 9807, 9.807, 0.009807, 0.9807, 0.009807, 22.76, 1.422, 0.001422, 2.896, 7.356, 73.56, 1, 100, 39.37, 0.09678],
                    [0.00001, 0.001, 0.01, 0.000001, 0.01, 1, 0.0102, 0.0000102, 0.0000000102, 0.102, 0.000102, 1, 0.001, 0.000001, 0.0001, 0.000001, 0.002321, 0.000145, 0.000000145, 0.0002953, 0.0007501, 0.007501, 0.000102, 0.0102, 0.004015, 0.000009869],
                    [0.01, 1, 10, 0.001, 10, 1000, 10.2, 0.0102, 0.0000102, 102, 0.102, 1000, 1, 0.001, 0.1, 0.001, 2.321, 0.145, 0.000145, 0.2953, 0.7501, 7.501, 0.102, 10.2, 4.015, 0.009869],
                    [10, 1000, 10000, 1, 10000, 1000000, 10200, 10.2, 0.0102, 102000, 102, 1000000, 1000, 1, 100, 1, 2321, 145, 0.145, 295.3, 750.1, 7501, 102, 10200, 4015, 9.869],
                    [0.1, 10, 100, 0.01, 100, 10000, 102, 0.102, 0.000102, 1020, 1.02, 10000, 10, 0.01, 1, 0.01, 23.21, 1.45, 0.00145, 2.953, 7.501, 75.01, 1.02, 102, 40.15, 0.09869],
                    [10, 1000, 10000, 1, 10000, 1000000, 10200, 10.2, 0.0102, 102000, 102, 1000000, 1000, 1, 100, 1, 2321, 145, 0.145, 295.3, 750.1, 7501, 102, 10200, 4015, 9.869],
                    [0.004309, 0.4309, 4.309, 0.0004309, 4.309, 430.9, 4.394, 0.004394, 0.000004394, 43.94, 0.04394, 430.9, 0.4309, 0.0004309, 0.04309, 0.0004309, 1, 0.0625, 0.0000625, 0.1273, 0.3232, 3.232, 0.04394, 4.394, 1.73, 0.004253],
                    [0.06895, 6.895, 68.95, 0.006895, 68.95, 6895, 70.31, 0.07031, 0.00007031, 703.1, 0.7031, 6895, 6.895, 0.006895, 0.6895, 0.006895, 16, 1, 0.001, 2.036, 5.171, 51.71, 0.7031, 70.31, 27.68, 0.06805],
                    [68.95, 6895, 68950, 6.895, 68950, 6895000, 70310, 70.31, 0.07031, 703100, 703.1, 6895000, 6895, 6.895, 689.5, 6.895, 16000, 1000, 1, 2036, 5171, 51710, 703.1, 70310, 27680, 68.05],
                    [0.03386, 3.386, 33.86, 0.003386, 33.86, 3386, 34.53, 0.03453, 0.00003453, 345.3, 0.3453, 3386, 3.386, 0.003386, 0.3386, 0.003386, 7.858, 0.4912, 0.0004912, 1, 2.54, 25.4, 0.3453, 34.53, 13.6, 0.03342],
                    [0.01333, 1.333, 13.33, 0.001333, 13.33, 1333, 13.6, 0.0136, 0.0000136, 136, 0.136, 1333, 1.333, 0.001333, 0.1333, 0.001333, 3.094, 0.1934, 0.0001934, 0.3937, 1, 10, 0.136, 13.6, 5.352, 0.01316],
                    [0.001333, 0.1333, 1.333, 0.0001333, 1.333, 133.3, 1.36, 0.00136, 0.00000136, 13.6, 0.0136, 133.3, 0.1333, 0.0001333, 0.01333, 0.0001333, 0.3094, 0.01934, 0.00001934, 0.03937, 0.1, 1, 0.0136, 1.36, 0.5352, 0.001316],
                    [0.09807, 9.807, 98.07, 0.009807, 98.07, 9807, 100, 0.1, 0.0001, 1000, 1, 9807, 9.807, 0.009807, 0.9807, 0.009807, 22.76, 1.422, 0.001422, 2.896, 7.356, 73.56, 1, 100, 39.37, 0.09678],
                    [0.0009807, 0.09807, 0.9807, 0.00009807, 0.9807, 98.07, 1, 0.001, 0.000001, 10, 0.01, 98.07, 0.09807, 0.00009807, 0.009807, 0.00009807, 0.2276, 0.01422, 0.00001422, 0.02896, 0.07356, 0.7356, 0.01, 1, 0.3937, 0.0009678],
                    [0.002491, 0.2491, 2.491, 0.0002491, 2.491, 249.1, 2.54, 0.00254, 0.00000254, 25.4, 0.0254, 249.1, 0.2491, 0.0002491, 0.02491, 0.0002491, 0.578, 0.03613, 0.00003613, 0.07356, 0.1868, 1.868, 0.0254, 2.54, 1, 0.002458],
                    [1.013, 101.3, 1013, 0.1013, 1013, 101300, 1033, 1.033, 0.001033, 10330, 10.33, 101300, 101.3, 0.1013, 10.13, 0.1013, 235.1, 14.7, 0.0147, 29.92, 76, 760, 10.33, 1033, 406.8, 1]
                ],
                conv_acel: [
                    [1, 1000, 1000000, 0.6214, 3281, 39370, 102, 100000],
                    [0.001, 1, 1000, 0.0006214, 3.281, 39.37, 0.102, 100],
                    [0.000001, 0.001, 1, 0.0000006214, 0.003281, 0.03937, 0.000102, 0.1],
                    [1.609, 1609, 1609000, 1, 5280, 63360, 164.1, 160900],
                    [0.0003048, 0.3048, 304.8, 0.0001894, 1, 12, 0.03108, 30.48],
                    [0.0000254, 0.0254, 25.4, 0.00001578, 0.08333, 1, 0.00259, 2.54],
                    [0.009807, 9.807, 9807, 0.006094, 32.17, 386.1, 1, 980.7],
                    [0.00001, 0.01, 10, 0.000006214, 0.03281, 0.3937, 0.00102, 1]
                ],
                conv_den: [
                    [1, 1000, 1000000, 1000000000, 1, 1000, 1000000, 1, 1000, 1000000, 0.001, 1, 1000, 0.001, 1, 1000, 1686, 62.43, 0.03613],
                    [0.001, 1, 1000, 1000000, 0.001, 1, 1000, 0.001, 1, 1000, 0.000001, 0.001, 1, 0.000001, 0.001, 1, 1.686, 0.06243, 0.00003613],
                    [0.000001, 0.001, 1, 1000, 0.000001, 0.001, 1, 0.000001, 0.001, 1, 0.000000001, 0.000001, 0.001, 0.000000001, 0.000001, 0.001, 0.001686, 0.00006243, 0.00000003613],
                    [0.000000001, 0.000001, 0.001, 1, 0.000000001, 0.000001, 0.001, 0.000000001, 0.000001, 0.001, 0.000000000001, 0.000000001, 0.000001, 0.000000000001, 0.000000001, 0.000001, 0.000001686, 0.00000006243, 0.00000000003613],
                    [1, 1000, 1000000, 1000000000, 1, 1000, 1000000, 1, 1000, 1000000, 0.001, 1, 1000, 0.001, 1, 1000, 1686, 62.43, 0.03613],
                    [0.001, 1, 1000, 1000000, 0.001, 1, 1000, 0.001, 1, 1000, 0.000001, 0.001, 1, 0.000001, 0.001, 1, 1.686, 0.06243, 0.00003613],
                    [0.000001, 0.001, 1, 1000, 0.000001, 0.001, 1, 0.000001, 0.001, 1, 0.000000001, 0.000001, 0.001, 0.000000001, 0.000001, 0.001, 0.001686, 0.00006243, 0.00000003613],
                    [1, 1000, 1000000, 1000000000, 1, 1000, 1000000, 1, 1000, 1000000, 0.001, 1, 1000, 0.001, 1, 1000, 1686, 62.43, 0.03613],
                    [0.001, 1, 1000, 1000000, 0.001, 1, 1000, 0.001, 1, 1000, 0.000001, 0.001, 1, 0.000001, 0.001, 1, 1.686, 0.06243, 0.00003613],
                    [0.000001, 0.001, 1, 1000, 0.000001, 0.001, 1, 0.000001, 0.001, 1, 0.000000001, 0.000001, 0.001, 0.000000001, 0.000001, 0.001, 0.001686, 0.00006243, 0.00000003613],
                    [1000, 1000000, 1000000000, 1000000000000, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, 1, 1000, 1000000, 1, 1000, 1000000, 1686000, 62430, 36.13],
                    [1, 1000, 1000000, 1000000000, 1, 1000, 1000000, 1, 1000, 1000000, 0.001, 1, 1000, 0.001, 1, 1000, 1686, 62.43, 0.03613],
                    [0.001, 1, 1000, 1000000, 0.001, 1, 1000, 0.001, 1, 1000, 0.000001, 0.001, 1, 0.000001, 0.001, 1, 1.686, 0.06243, 0.00003613],
                    [1000, 1000000, 1000000000, 1000000000000, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, 1, 1000, 1000000, 1, 1000, 1000000, 1686000, 62430, 36.13],
                    [1, 1000, 1000000, 1000000000, 1, 1000, 1000000, 1, 1000, 1000000, 0.001, 1, 1000, 0.001, 1, 1000, 1686, 62.43, 0.03613],
                    [0.001, 1, 1000, 1000000, 0.001, 1, 1000, 0.001, 1, 1000, 0.000001, 0.001, 1, 0.000001, 0.001, 1, 1.686, 0.06243, 0.00003613],
                    [0.0005933, 0.5933, 593.3, 593300, 0.0005933, 0.5933, 593.3, 0.0005933, 0.5933, 593.3, 0.0000005933, 0.0005933, 0.5933, 0.0000005933, 0.0005933, 0.5933, 1, 0.03704, 0.00002143],
                    [0.01602, 16.02, 16020, 16020000, 0.01602, 16.02, 16020, 0.01602, 16.02, 16020, 0.00001602, 0.01602, 16.02, 0.00001602, 0.01602, 16.02, 27, 1, 0.0005787],
                    [27.68, 27680, 27680000, 27680000000, 27.68, 27680, 27680000, 27.68, 27680, 27680000, 0.02768, 27.68, 27680, 0.02768, 27.68, 27680, 46660, 1728, 1]
                ],
                conv_tiempo: [
                    [1, 0.001, 1e-6, 1e-9, 1.6667e-11, 2.7778e-13, 1.1574e-14, 1.6534e-15, 3.8052e-16, 3.171e-17, 3.171e-18, 3.171e-19],
                    [1000, 1, 0.001, 1e-6, 1.6667e-8, 2.7778e-10, 1.1574e-11, 1.6534e-12, 3.8052e-13, 3.171e-14, 3.171e-15, 3.171e-16],
                    [1e6, 1000, 1, 0.001, 1.6667e-5, 2.7778e-7, 1.1574e-8, 1.6534e-9, 3.8052e-10, 3.8052e-11, 3.171e-12, 3.171e-13],
                    [1e9, 1e6, 1000, 1, 0.0166667, 0.000277778, 1.1574e-5, 1.6534e-6, 3.8052e-7, 3.171e-8, 3.171e-9, 3.171e-10],
                    [6e10, 6e7, 60000, 60, 1, 0.0166667, 0.000694444, 9.9206e-5, 2.2831e-5, 1.9026e-6, 1.9026e-7, 1.9026e-8],
                    [3.6e12, 3.6e9, 3.6e6, 3600, 60, 1, 0.0416667, 0.00595238, 0.00136986, 0.000114155, 1.1416e-5, 1.1416e-6],
                    [8.64e13, 8.64e10, 8.64e7, 86400, 1440, 24, 1, 0.142857, 0.0328767, 0.00273973, 0.000273973, 2.7397e-5],
                    [6.048e14, 6.048e11, 6.048e8, 604800, 10080, 168, 7, 1, 0.230137, 0.0191781, 0.00191781, 0.000191781],
                    [2.628e15, 2.628e12, 2.628e9, 2.628e6, 43800, 730.001, 30.4167, 4.34524, 1, 0.0833334, 0.00833334, 0.000833334],
                    [3.154e16, 3.154e13, 3.154e10, 3.154e7, 525600, 8760, 365, 52.1429, 12, 1, 0.1, 0.01],
                    [3.154e17, 3.154e14, 3.154e11, 3.154e8, 5.256e6, 87600, 3650, 521.429, 120, 10, 1, 0.1],
                    [3.154e18, 3.154e15, 3.154e12, 3.154e9, 5.256e7, 876000, 36500, 5214.29, 1200, 100, 10, 1]
                ],
                conv_vel: [
                    [1, 1000, 3600, 60000, 0.6214, 2237, 3281, 196900, 1944],
                    [0.001, 1, 3.6, 60, 0.0006214, 2.237, 3.281, 196.9, 1.944],
                    [0.0002778, 0.2778, 1, 16.67, 0.0001726, 0.6214, 0.9113, 54.68, 0.54],
                    [0.00001667, 0.01667, 0.06, 1, 0.00001036, 0.03728, 0.05468, 3.281, 0.0324],
                    [1.609, 1609, 5794, 96560, 1, 3600, 5280, 316800, 3128],
                    [0.000447, 0.447, 1.609, 26.82, 0.0002778, 1, 1.467, 88, 0.869],
                    [0.0003048, 0.3048, 1.097, 18.29, 0.0001894, 0.6818, 1, 60, 0.5925],
                    [0.00000508, 0.00508, 0.01829, 0.3048, 0.000003157, 0.01136, 0.01667, 1, 0.009875],
                    [0.0005144, 0.5144, 1.852, 30.87, 0.0003197, 1.151, 1.688, 101.3, 1]
                ],
                conv_vol: [
                    [1, 1000000000, 1000000000000, 1000000000000000, 1.0000e18, 10000000000, 100000000000, 1000000000000, 10000000000000, 100000000000000, 1000000000000000, 1.0000e18, 0.2399, 35310000, 1308000000, 353100000, 35310000000, 61020000000000],
                    [0.000000001, 1, 1000, 1000000, 1000000000, 10, 100, 1000, 10000, 100000, 1000000, 1000000000, 0.0000000002399, 0.03531, 1.308, 0.3531, 35.31, 61020],
                    [0.000000000001, 0.001, 1, 1000, 1000000, 0.01, 0.1, 1, 10, 100, 1000, 1000000, 0.0000000000002399, 0.00003531, 0.001308, 0.0003531, 0.03531, 61.02],
                    [0.000000000000001, 0.000001, 0.001, 1, 1000, 0.00001, 0.0001, 0.001, 0.01, 0.1, 1, 1000, 2.399e-16, 0.00000003531, 0.000001308, 0.0000003531, 0.00003531, 0.06102],
                    [1.000e-18, 0.000000001, 0.000001, 0.001, 1, 0.00000001, 0.0000001, 0.000001, 0.00001, 0.0001, 0.001, 1, 2.399e-19, 0.00000000003531, 0.000000001308, 0.0000000003531, 0.00000003531, 0.00006102],
                    [0.0000000001, 0.1, 100, 100000, 100000000, 1, 10, 100, 1000, 10000, 100000, 100000000, 0.00000000002399, 0.003531, 0.1308, 0.03531, 3.531, 6102],
                    [0.00000000001, 0.01, 10, 10000, 10000000, 0.1, 1, 10, 100, 1000, 10000, 10000000, 0.000000000002399, 0.0003531, 0.01308, 0.003531, 0.3531, 610.2],
                    [0.000000000001, 0.001, 1, 1000, 1000000, 0.01, 0.1, 1, 10, 100, 1000, 1000000, 0.0000000000002399, 0.00003531, 0.001308, 0.0003531, 0.03531, 61.02],
                    [0.0000000000001, 0.0001, 0.1, 100, 100000, 0.001, 0.01, 0.1, 1, 10, 100, 100000, 0.00000000000002399, 0.000003531, 0.0001308, 0.00003531, 0.003531, 6.102],
                    [0.00000000000001, 0.00001, 0.01, 10, 10000, 0.0001, 0.001, 0.01, 0.1, 1, 10, 10000, 0.000000000000002399, 0.0000003531, 0.00001308, 0.000003531, 0.0003531, 0.6102],
                    [0.000000000000001, 0.000001, 0.001, 1, 1000, 0.00001, 0.0001, 0.001, 0.01, 0.1, 1, 1000, 2.399e-16, 0.00000003531, 0.000001308, 0.0000003531, 0.00003531, 0.06102],
                    [1.000e-18, 0.000000001, 0.000001, 0.001, 1, 0.00000001, 0.0000001, 0.000001, 0.00001, 0.0001, 0.001, 1, 2.399e-19, 0.00000000003531, 0.000000001308, 0.0000000003531, 0.00000003531, 0.00006102],
                    [4.168, 4168000000, 4168000000000, 4168000000000000, 4.168e18, 41680000000, 416800000000, 4168000000000, 41680000000000, 416800000000000, 4168000000000000, 4.168e18, 1, 147200000, 5452000000, 1472000000, 147200000000, 254400000000000],
                    [0.00000002832, 28.32, 28320, 28320000, 28320000000, 283.2, 2832, 28320, 283200, 2832000, 28320000, 28320000000, 0.000000006794, 1, 37.04, 10, 1000, 1728000],
                    [0.0000000007646, 0.7646, 764.6, 764600, 764600000, 7.646, 76.46, 764.6, 7646, 76460, 764600, 764600000, 0.0000000001834, 0.027, 1, 0.27, 27, 46660],
                    [0.000000002832, 2.832, 2832, 2832000, 2832000000, 28.32, 283.2, 2832, 28320, 283200, 2832000, 2832000000, 0.0000000006794, 0.1, 3.704, 1, 100, 172800],
                    [0.00000000002832, 0.02832, 28.32, 28320, 28320000, 0.2832, 2.832, 28.32, 283.2, 2832, 28320, 28320000, 0.000000000006794, 0.001, 0.03704, 0.01, 1, 1728],
                    [0.00000000000001639, 0.00001639, 0.01639, 16.39, 16390, 0.0001639, 0.001639, 0.01639, 0.1639, 1.639, 16.39, 16390, 0.000000000000003931, 0.0000005787, 0.00002143, 0.000005787, 0.0005787, 1]
                ],
                conv_ang: [
                    [1, 6, 6.283, 360, 400, 21600, 1296000, 32],
                    [0.1667, 1, 1.047, 60, 66.67, 3600, 216000, 5.333],
                    [0.1592, 0.9549, 1, 57.3, 63.66, 3438, 206300, 5.093],
                    [0.002778, 0.01667, 0.01745, 1, 1.111, 60, 3600, 0.08889],
                    [0.0025, 0.015, 0.01571, 0.9, 1, 54, 3240, 0.08],
                    [0.0000463, 0.0002778, 0.0002909, 0.01667, 0.01852, 1, 60, 0.001481],
                    [0.0000007716, 0.00000463, 0.000004848, 0.0002778, 0.0003086, 0.01667, 1, 0.00002469],
                    [0.03125, 0.1875, 0.1963, 11.25, 12.5, 675, 40500, 1]
                ],
                conv_are: [
                    [1, 100, 10000, 1000000, 100000000, 10000000000, 1000000000000, 1.000e34, 0.3861, 247.1, 1196000, 10760000, 1550000000],
                    [0.01, 1, 100, 10000, 1000000, 100000000, 10000000000, 1.000e32, 0.003861, 2.471, 11960, 107600, 15500000],
                    [0.0001, 0.01, 1, 100, 10000, 1000000, 100000000, 1.0000e30, 0.00003861, 0.02471, 119.6, 1076, 155000],
                    [0.000001, 0.0001, 0.01, 1, 100, 10000, 1000000, 1.000e28, 0.0000003861, 0.0002471, 1.196, 10.76, 1550],
                    [0.00000001, 0.000001, 0.0001, 0.01, 1, 100, 10000, 1.0000e26, 0.000000003861, 0.000002471, 0.01196, 0.1076, 15.5],
                    [0.0000000001, 0.00000001, 0.000001, 0.0001, 0.01, 1, 100, 1.0000e24, 0.00000000003861, 0.00000002471, 0.0001196, 0.001076, 0.155],
                    [0.000000000001, 0.0000000001, 0.00000001, 0.000001, 0.0001, 0.01, 1, 1.000e22, 0.0000000000003861, 0.0000000002471, 0.000001196, 0.00001076, 0.00155],
                    [1.000e-34, 1.000e-32, 1.000e-30, 1.000e-28, 1.000e-26, 1.000e-24, 1.000e-22, 1, 3.861e-35, 2.471e-32, 1.196e-28, 1.076e-27, 1.55e-25],
                    [2.59, 259, 25900, 2590000, 259000000, 25900000000, 2590000000000, 2.59e34, 1, 640, 3098000, 27880000, 4014000000],
                    [0.004047, 0.4047, 40.47, 4047, 404700, 40470000, 4047000000, 4.047e31, 0.001563, 1, 4840, 43560, 6273000],
                    [0.0000008361, 0.00008361, 0.008361, 0.8361, 83.61, 8361, 836100, 8.361e27, 0.0000003228, 0.0002066, 1, 9, 1296],
                    [0.0000000929, 0.00000929, 0.000929, 0.0929, 9.29, 929, 92900, 9.29e26, 0.00000003587, 0.00002296, 0.1111, 1, 144],
                    [0.0000000006452, 0.00000006452, 0.000006452, 0.0006452, 0.06452, 6.452, 645.2, 6.452e24, 0.0000000002491, 0.0000001594, 0.0007716, 0.006944, 1]
                ]
            }
        };

        // Obtener elementos del DOM
        const unitTypeSelect = document.getElementById('unit-type');
        const fromUnitOptions = document.getElementById('from-unit-options');
        const toUnitOptions = document.getElementById('to-unit-options');
        const valueInput = document.getElementById('value');
        const convertBtn = document.getElementById('convert-btn');
        const resultDiv = document.getElementById('result');
        const conversionResult = document.getElementById('conversion-result');

        // Variables para almacenar las selecciones
        let selectedFromUnit = null;
        let selectedToUnit = null;

        // Función para cargar las unidades según el tipo seleccionado
        function loadUnits() {
            const selectedType = unitTypeSelect.value;
            let units = [];
            let nomenKey = '';
            
            // Determinar qué conjunto de unidades cargar según el tipo seleccionado
            switch(selectedType) {
                case '1': nomenKey = 'nomen_energ'; break;
                case '2': nomenKey = 'nomen_frec'; break;
                case '3': nomenKey = 'nomen_long'; break;
                case '4': nomenKey = 'nomen_masa'; break;
                case '5': nomenKey = 'nomen_fuerz'; break;
                case '6': nomenKey = 'nomen_pres'; break;
                case '7': nomenKey = 'nomen_acel'; break;
                case '8': nomenKey = 'nomen_den'; break;
                case '9': nomenKey = 'nomen_tiempo'; break;
                case '10': nomenKey = 'nomen_vel'; break;
                case '11': nomenKey = 'nomen_vol'; break;
                case '12': nomenKey = 'nomen_ang'; break;
                case '13': nomenKey = 'nomen_are'; break;
            }
            
            units = unitsData.nomen[nomenKey];
            
            // Limpiar los contenedores de opciones
            fromUnitOptions.innerHTML = '';
            toUnitOptions.innerHTML = '';
            
            // Reiniciar las selecciones
            selectedFromUnit = null;
            selectedToUnit = null;
            
            // Llenar los contenedores con las unidades correspondientes
            units.forEach((unit, index) => {
                // Crear opción para "De:"
                const fromOption = document.createElement('div');
                fromOption.className = 'unit-option';
                fromOption.innerHTML = `
                    <input type="radio" id="from-${index}" name="from-unit" value="${index}">
                    <label for="from-${index}">${unit}</label>
                `;
                fromUnitOptions.appendChild(fromOption);
                
                // Crear opción para "A:"
                const toOption = document.createElement('div');
                toOption.className = 'unit-option';
                toOption.innerHTML = `
                    <input type="radio" id="to-${index}" name="to-unit" value="${index}">
                    <label for="to-${index}">${unit}</label>
                `;
                toUnitOptions.appendChild(toOption);
                
                // Asignar eventos para capturar las selecciones
                fromOption.querySelector('input').addEventListener('change', (e) => {
                    selectedFromUnit = parseInt(e.target.value);
                });
                
                toOption.querySelector('input').addEventListener('change', (e) => {
                    selectedToUnit = parseInt(e.target.value);
                });
            });
            
            // Seleccionar la primera opción en "De:" y la segunda en "A:" por defecto
            if (units.length > 0) {
                fromUnitOptions.querySelector('input').checked = true;
                selectedFromUnit = 0;
                
                if (units.length > 1) {
                    toUnitOptions.querySelectorAll('input')[1].checked = true;
                    selectedToUnit = 1;
                }
            }
        }

        // Función para realizar la conversión
        function convertUnits() {
            const selectedType = unitTypeSelect.value;
            const value = parseFloat(valueInput.value);
            
            if (isNaN(value)) {
                alert('Por favor ingrese un valor numérico válido');
                return;
            }
            
            if (selectedFromUnit === null || selectedToUnit === null) {
                alert('Por favor seleccione las unidades de origen y destino');
                return;
            }
            
            let convMatrix = [];
            let convKey = '';
            let nomenKey = '';
            
            // Determinar qué matriz de conversión usar según el tipo seleccionado
            switch(selectedType) {
                case '1': convKey = 'conv_energ'; nomenKey = 'nomen_energ'; break;
                case '2': convKey = 'conv_frec'; nomenKey = 'nomen_frec'; break;
                case '3': convKey = 'conv_long'; nomenKey = 'nomen_long'; break;
                case '4': convKey = 'conv_masa'; nomenKey = 'nomen_masa'; break;
                case '5': convKey = 'conv_fuerz'; nomenKey = 'nomen_fuerz'; break;
                case '6': convKey = 'conv_pres'; nomenKey = 'nomen_pres'; break;
                case '7': convKey = 'conv_acel'; nomenKey = 'nomen_acel'; break;
                case '8': convKey = 'conv_den'; nomenKey = 'nomen_den'; break;
                case '9': convKey = 'conv_tiempo'; nomenKey = 'nomen_tiempo'; break;
                case '10': convKey = 'conv_vel'; nomenKey = 'nomen_vel'; break;
                case '11': convKey = 'conv_vol'; nomenKey = 'nomen_vol'; break;
                case '12': convKey = 'conv_ang'; nomenKey = 'nomen_ang'; break;
                case '13': convKey = 'conv_are'; nomenKey = 'nomen_are'; break;
            }
            
            convMatrix = unitsData.conv[convKey];
            const nomen = unitsData.nomen[nomenKey];
            
            // Realizar la conversión
            const conversionFactor = convMatrix[selectedFromUnit][selectedToUnit];
            const convertedValue = value * conversionFactor;
            
            // Mostrar el resultado
            const fromUnitName = nomen[selectedFromUnit];
            const toUnitName = nomen[selectedToUnit];
            
            conversionResult.innerHTML = `
                <div style="font-weight: bold; font-size: 1em;">${value} ${fromUnitName} = ${convertedValue} ${toUnitName}</div>
            `;
            
            resultDiv.style.display = 'block';
        }

        // Cargar unidades al cambiar el tipo de unidad
        unitTypeSelect.addEventListener('change', loadUnits);

        // Asignar evento al botón de conversión
        convertBtn.addEventListener('click', convertUnits);

        // Cargar unidades al iniciar la página
        loadUnits();